---
- name: Remove current paperless release directory
  become: true
  ansible.builtin.file:
    path: "{{ paperless_ngx_dir_installation }}/"
    state: absent

- name: Create paperless-ngx directories and set permissions
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ paperless_ngx_system_user }}"
    group: "{{ paperless_ngx_system_group }}"
    mode: "750"
  loop: "{{ paperless_ngx_dir_force_permission_include | difference(paperless_ngx_dir_force_permission_exclude) }}"

- name: Check if tempdir exists
  ansible.builtin.find:
    paths: "{{ paperless_ngx_dir_tmp }}/"
    patterns: "*tempgit_pngx*"
    file_type: directory
  register: _install_tempdir_state

- name: Create temporary directory if not exists
  block:
    - name: Create temporary directorys root path
      ansible.builtin.file:
        path: "{{ paperless_ngx_dir_tmp }}"
        state: directory

    - name: Create target temporary directory
      ansible.builtin.tempfile:
        state: directory
        path: "{{ paperless_ngx_dir_tmp }}/"
        suffix: tempgit_pngx
      register: _install_tempdir_created
  when: _install_tempdir_state.matched == 0

- name: Determine temporary directory to use  # noqa jinja[spacing]
  ansible.builtin.set_fact:
    _install_tempdir: >-
      {%- if _install_tempdir_created.path is defined -%}
      {{ _install_tempdir_created.path }}
      {%- else -%}
      {{ _install_tempdir_state.files[0].path }}
      {%- endif -%}

- name: Download and extract paperless-ngx
  ansible.builtin.unarchive:
    src: "{{ _release__download_url }}"
    remote_src: true
    dest: "{{ _install_tempdir }}"
  register: _download_and_unarchive_pngx
  until:
    - "not 'urlopen error' in _download_and_unarchive_pngx.msg | default('')"
  retries: 3
  delay: 10

- name: Set all file & directory permissions
  ansible.builtin.command:
    cmd: "{{ item }}"
  with_items:
    - find {{ _install_tempdir }} -type d -exec chmod -c 0750 {} ;
    - find {{ _install_tempdir }} -type f -exec chmod -c 0640 {} ;
  register: _set_temp_install_permissions
  changed_when:
    - 'not _set_temp_install_permissions.stdout == ""'

- name: Copy file with owner and permissions
  become: true
  ansible.builtin.copy:
    src: "{{ _install_tempdir }}/paperless-ngx/"
    remote_src: true
    dest: "{{ paperless_ngx_dir_installation }}/"
    owner: "{{ paperless_ngx_system_user }}"
    group: "{{ paperless_ngx_system_group }}"
    mode: preserve
    directory_mode: preserve

- name: Make the config file the template file
  become: true
  ansible.builtin.copy:
    src: "{{ paperless_ngx_dir_installation }}/paperless.conf"
    remote_src: true
    dest: "{{ paperless_ngx_config_file_template }}"
    owner: "{{ paperless_ngx_system_user }}"
    group: "{{ paperless_ngx_system_group }}"

- name: Delete paperless-ngx configuration from installation dir
  become: true
  ansible.builtin.file:
    path: "{{ paperless_ngx_dir_installation }}/paperless.conf"
    state: absent

- name: Remove temporary directory
  become: true
  ansible.builtin.file:
    path: "{{ _install_tempdir }}"
    state: absent
